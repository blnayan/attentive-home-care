/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    media: Media;
    users: User;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    media: MediaSelect<false> | MediaSelect<true>;
    users: UsersSelect<false> | UsersSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: number;
  };
  globals: {
    'home-page': HomePage;
  };
  globalsSelect: {
    'home-page': HomePageSelect<false> | HomePageSelect<true>;
  };
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: number;
  alt: string;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
  sizes?: {
    hero?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    card?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  sessions?:
    | {
        id: string;
        createdAt?: string | null;
        expiresAt: string;
      }[]
    | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: number;
  document?:
    | ({
        relationTo: 'media';
        value: number | Media;
      } | null)
    | ({
        relationTo: 'users';
        value: number | User;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
  sizes?:
    | T
    | {
        hero?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        card?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
  sessions?:
    | T
    | {
        id?: T;
        createdAt?: T;
        expiresAt?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "home-page".
 */
export interface HomePage {
  id: number;
  navigation: {
    logoText: string;
    logoImage?: (number | null) | Media;
    links?:
      | {
          label: string;
          href: string;
          id?: string | null;
        }[]
      | null;
    cta?: {
      label?: string | null;
      href?: string | null;
    };
    phoneButton?: {
      label?: string | null;
      href?: string | null;
    };
  };
  hero: {
    title: string;
    description: string;
    primaryAction?: {
      label?: string | null;
      href?: string | null;
    };
    secondaryAction?: {
      label?: string | null;
      href?: string | null;
      icon?: ('heart' | 'home' | 'shield' | 'clock' | 'check' | 'phone' | 'mail') | null;
    };
    image?: (number | null) | Media;
  };
  about?: {
    missionBadge?: string | null;
    missionTitle?: string | null;
    missionDescription?: string | null;
    visionBadge?: string | null;
    visionTitle?: string | null;
    visionDescription?: string | null;
  };
  servicesSection?: {
    badge?: string | null;
    title?: string | null;
    description?: string | null;
    cards?:
      | {
          icon?: ('heart' | 'home' | 'shield' | 'clock' | 'check' | 'phone' | 'mail') | null;
          title: string;
          description?: string | null;
          id?: string | null;
        }[]
      | null;
    cta?: {
      label?: string | null;
      href?: string | null;
    };
  };
  whyChoose?: {
    image?: (number | null) | Media;
    title?: string | null;
    features?:
      | {
          icon?: ('heart' | 'home' | 'shield' | 'clock' | 'check' | 'phone' | 'mail') | null;
          title?: string | null;
          description?: string | null;
          id?: string | null;
        }[]
      | null;
  };
  contact?: {
    title?: string | null;
    description?: string | null;
    cards?:
      | {
          icon?: ('heart' | 'home' | 'shield' | 'clock' | 'check' | 'phone' | 'mail') | null;
          title?: string | null;
          lines?:
            | {
                value: string;
                href?: string | null;
                id?: string | null;
              }[]
            | null;
          id?: string | null;
        }[]
      | null;
    cta?: {
      label?: string | null;
      href?: string | null;
      icon?: ('heart' | 'home' | 'shield' | 'clock' | 'check' | 'phone' | 'mail') | null;
    };
  };
  closingCta?: {
    title?: string | null;
    description?: string | null;
    buttonLabel?: string | null;
    buttonHref?: string | null;
    buttonIcon?: ('heart' | 'home' | 'shield' | 'clock' | 'check' | 'phone' | 'mail') | null;
  };
  footer?: {
    logoText?: string | null;
    description?: string | null;
    quickLinks?:
      | {
          label?: string | null;
          href?: string | null;
          id?: string | null;
        }[]
      | null;
    contact?: {
      phone?: string | null;
      email?: string | null;
      website?: string | null;
    };
  };
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "home-page_select".
 */
export interface HomePageSelect<T extends boolean = true> {
  navigation?:
    | T
    | {
        logoText?: T;
        logoImage?: T;
        links?:
          | T
          | {
              label?: T;
              href?: T;
              id?: T;
            };
        cta?:
          | T
          | {
              label?: T;
              href?: T;
            };
        phoneButton?:
          | T
          | {
              label?: T;
              href?: T;
            };
      };
  hero?:
    | T
    | {
        title?: T;
        description?: T;
        primaryAction?:
          | T
          | {
              label?: T;
              href?: T;
            };
        secondaryAction?:
          | T
          | {
              label?: T;
              href?: T;
              icon?: T;
            };
        image?: T;
      };
  about?:
    | T
    | {
        missionBadge?: T;
        missionTitle?: T;
        missionDescription?: T;
        visionBadge?: T;
        visionTitle?: T;
        visionDescription?: T;
      };
  servicesSection?:
    | T
    | {
        badge?: T;
        title?: T;
        description?: T;
        cards?:
          | T
          | {
              icon?: T;
              title?: T;
              description?: T;
              id?: T;
            };
        cta?:
          | T
          | {
              label?: T;
              href?: T;
            };
      };
  whyChoose?:
    | T
    | {
        image?: T;
        title?: T;
        features?:
          | T
          | {
              icon?: T;
              title?: T;
              description?: T;
              id?: T;
            };
      };
  contact?:
    | T
    | {
        title?: T;
        description?: T;
        cards?:
          | T
          | {
              icon?: T;
              title?: T;
              lines?:
                | T
                | {
                    value?: T;
                    href?: T;
                    id?: T;
                  };
              id?: T;
            };
        cta?:
          | T
          | {
              label?: T;
              href?: T;
              icon?: T;
            };
      };
  closingCta?:
    | T
    | {
        title?: T;
        description?: T;
        buttonLabel?: T;
        buttonHref?: T;
        buttonIcon?: T;
      };
  footer?:
    | T
    | {
        logoText?: T;
        description?: T;
        quickLinks?:
          | T
          | {
              label?: T;
              href?: T;
              id?: T;
            };
        contact?:
          | T
          | {
              phone?: T;
              email?: T;
              website?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}